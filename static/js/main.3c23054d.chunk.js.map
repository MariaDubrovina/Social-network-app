{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/149071.png","HOC/AuthRedirect.js","Redux/messagesReducer.js","Components/Common/Helpers/object_helper.js","Redux/usersReducer.js","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Api/api.js","logo.svg","Components/Music/Music.jsx","Components/Settings/Settings.jsx","Components/News/News.jsx","Redux/profileReducer.js","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Redux/authReducer.js","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Common/Helpers/form_helper.jsx","Components/Signin/Signin.jsx","Redux/appReducer.js","Redux/reduxStore.js","HOC/withReactSuspense.js","App.js","reportWebVitals.js","index.js","assets/images/Spinner.svg","Components/Common/Preloader/Preloader.jsx"],"names":["module","exports","mapStateToPropsRedirect","state","isAuth","auth","AuthRedirect","Component","connect","props","to","SEND_MESSAGE","initialState","chatData","name","id","messageData","message","sendMessageCreator","messageBody","type","messagesReducer","action","stateCopy","newMessage","push","updateObjectInStateArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TURN_ON_LOADER","DISABLE_BUTTON","users","pageSize","totalUsersCount","currentPage","isLoading","isFollowButtonClicled","followSuccess","userId","unfollowSuccess","setCurrentPage","turnOnLoader","disableButton","requestUsers","dispatch","a","usersAPI","getUsers","data","totalCount","followUnfollowFunc","apiMethod","actionCreator","resultCode","follow","followAPI","followUser","unfollow","unfollowAPI","unfollowUser","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","authMeAPI","getAuthMeData","login","email","password","rememberMe","logout","ProfileAPI","getProfile","getStatus","updateStatus","status","put","Music","Settings","News","ADD_POST","SET_USER_PROFILE","SET_STATUS","postData","likes","profile","setStatus","profileReducer","newPost","postBody","Post","className","classes","src","MyPosts","React","memo","postElements","reverse","postsBlock","addPostBlock","addPost","posts","PostsForm","initialValues","onSubmit","values","setSubmitting","isSubmitting","disabled","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","descriptionBlock","photos","small","userPhoto","userName","fullName","Preloader","Profile","ProfileContainer","this","match","params","getUserStatus","Container","compose","withRouter","SET_USER_DATA","setAuthUserData","userData","authReducer","Header","Layout","AppHeader","span","style","backgroundColor","icon","UserOutlined","onClick","HeaderContainer","MyTextInput","label","useField","field","meta","htmlFor","touched","error","MyCheckbox","children","LoginValidation","Yup","shape","required","min","max","SigninForm","validationSchema","placeholder","messages","SET_INITIALIZED","isInitialized","appReducer","reducers","combineReducers","messagesPage","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withReactSuspense","fallback","MessagesContainer","lazy","UsersContainer","Content","Sider","App","initializeApp","width","mode","selectedKeys","location","pathname","defaultOpenKeys","defaultSelectedKeys","height","borderRight","Item","MessageOutlined","SmileOutlined","padding","margin","minHeight","path","render","AppContainer","MainApp","StrictMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","spinner"],"mappings":"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","file":"static/js/main.3c23054d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock___Q1tq\",\"addPostBlock\":\"MyPosts_addPostBlock__2QOxD\",\"posts\":\"MyPosts_posts__P_wAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3HQ-L\",\"wall\":\"ProfileInfo_wall__dGPsk\",\"userName\":\"ProfileInfo_userName__2j83_\"};","export default __webpack_public_path__ + \"static/media/149071.a6143582.png\";","import { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth,\r\n    }\r\n  }\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        \r\n        if (!props.isAuth) return <Redirect to='/signin' />;\r\n        return <Component {...props} />;\r\n        \r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n  chatData : [\r\n      {name:'Andrey', id:1},\r\n      {name:'Martin', id:2},\r\n      {name:'Dasha', id:3},\r\n      {name:'Martin', id:4},\r\n      {name:'Natasha', id:5}\r\n    ],\r\n    \r\n    messageData : [\r\n      {message:'Hi', id:1},\r\n      {message:'How is your day?', id:2},\r\n      {message:\"What's up?\", id:3}\r\n    ],\r\n\r\n    \r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = {\r\n      ...state,\r\n      messageData: [...state.messageData]\r\n    };\r\n\r\n    switch(action.type) {\r\n       case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id:4,\r\n                message: action.messageBody\r\n                \r\n              };\r\n              stateCopy.messageData.push(newMessage);\r\n              return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (messageBody) => {\r\n    return {\r\n      type: SEND_MESSAGE,\r\n      messageBody\r\n    };\r\n  }\r\n    \r\n\r\n\r\nexport default messagesReducer;","export const updateObjectInStateArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((item) => {\r\n        if (item[objPropName] === itemId) {\r\n          return { ...item, ...newObjProps };\r\n        }\r\n        return item;\r\n    })\r\n}","import { followAPI, unfollowAPI, usersAPI } from \"../Api/api\";\r\nimport { updateObjectInStateArray } from \"../Components/Common/Helpers/object_helper\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TURN_ON_LOADER = 'TURN_ON_LOADER';\r\nconst DISABLE_BUTTON = 'DISABLE_BUTTON';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 3,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isLoading: false,\r\n  isFollowButtonClicled: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInStateArray(state.users, action.userId, 'id', {followed:true})\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInStateArray(state.users, action.userId, 'id', {followed:false})\r\n      }\r\n\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    }\r\n\r\n    case SET_CURRENT_PAGE: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      }\r\n    }\r\n\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount\r\n      }\r\n    }\r\n\r\n    case TURN_ON_LOADER: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading\r\n      }\r\n    }\r\n\r\n    case DISABLE_BUTTON: {\r\n      return {\r\n        ...state,\r\n        isFollowButtonClicled: action.isFollowButtonClicled\r\n          ? [...state.isFollowButtonClicled, action.userId]\r\n          : state.isFollowButtonClicled.filter(id => id != action.userId)\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId\r\n  };\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userId\r\n  };\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users\r\n  };\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n  };\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n  return {\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n  };\r\n}\r\n\r\nexport const turnOnLoader = (isLoading) => {\r\n  return {\r\n    type: TURN_ON_LOADER,\r\n    isLoading\r\n  };\r\n}\r\n\r\nexport const disableButton = (isFollowButtonClicled, userId) => {\r\n  return {\r\n    type: DISABLE_BUTTON,\r\n    isFollowButtonClicled, userId\r\n  };\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(turnOnLoader(true));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(turnOnLoader(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n  }\r\n}\r\n\r\nconst followUnfollowFunc = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(disableButton(true, userId));\r\n  let data = await apiMethod(userId)\r\n\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(disableButton(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFunc(dispatch, userId, followAPI.followUser, followSuccess);\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFunc(dispatch, userId, unfollowAPI.unfollowUser, unfollowSuccess);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__aMVlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pP2q\",\"loginBlock\":\"Header_loginBlock__321R5\"};","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '1ebea31a-d00a-46c9-9e4d-8174921ca616'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 3) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const followAPI ={\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n        .then(response => response.data);\r\n         \r\n     }\r\n}\r\n\r\nexport const unfollowAPI ={\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n        .then(response => response.data);\r\n         \r\n     }\r\n}\r\n\r\nexport const authMeAPI ={\r\n    getAuthMeData() {\r\n        return instance.get(`auth/me`)\r\n        .then(response => response.data);\r\n         \r\n     },\r\n\r\n     login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n        .then(response => response.data);\r\n         \r\n     },\r\n\r\n     logout() {\r\n        return instance.delete(`auth/login`)\r\n        .then(response => response.data);\r\n         \r\n     }\r\n}\r\n\r\nexport const ProfileAPI ={\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n        .then(response => response.data);\r\n         \r\n     },\r\n\r\n     getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n        .then(response => response.data);\r\n         \r\n     },\r\n\r\n     updateStatus(status) {\r\n        return instance.put(`profile/status`, {status:status})\r\n        .then(response => response.data);\r\n         \r\n     }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import classes from './Music.module.css'\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>Music</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Music;","import classes from './Settings.module.css'\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>Settings</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","import classes from './News.module.css'\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>News</div>\r\n    );\r\n}\r\n\r\n\r\nexport default News;","import { ProfileAPI } from \"../Api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n  postData: [\r\n    { post: 'HI guys, have a great day!', id: 1, likes: 15 },\r\n    { post: 'Morning vibes', id: 2, likes: 10 },\r\n\r\n  ],\r\n\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 3,\r\n        post: action.postBody,\r\n        likes: 0\r\n      };\r\n      let stateCopy = { ...state };\r\n      stateCopy.postData = [...state.postData];\r\n      stateCopy.postData.push(newPost);\r\n      return stateCopy;\r\n    }\r\n\r\n\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    }\r\n\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (postBody) => {\r\n  return {\r\n    type: ADD_POST,\r\n    postBody\r\n  };\r\n}\r\n\r\n\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n  };\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status\r\n  };\r\n}\r\n\r\nexport const getProfile = (userId) => {\r\n  return async (dispatch) => {\r\n\r\n    let data = await ProfileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n  }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n  return async (dispatch) => {\r\n\r\n    let data = await ProfileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n  }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n  return async (dispatch) => {\r\n\r\n    let data = await ProfileAPI.updateStatus(status);\r\n\r\n    if (data.resultCode === 1) {\r\n      dispatch(setStatus(data));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","import classes from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className={classes.item}>\r\n      <img src='https://n1s2.starhit.ru/6a/46/ae/6a46aeed947a183d67d1bc48211151bf/480x496_0_2bbde84177c9ff1c2299a26a0f69f69c@480x496_0xac120003_4430520541578509619.jpg' />\r\n      {props.message}\r\n\r\n      <div>\r\n        <span>{props.likes}</span>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Formik, Form, Field} from 'formik';\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postElements = [...props.postData]\r\n  .reverse()\r\n  .map((post) => {\r\n    return (\r\n      <Post message={post.post} likes={post.likes} key={post.id} />\r\n    );\r\n  }\r\n  );\r\n\r\n\r\n  let addNewPost = (postBody) => {\r\n    props.addPost(postBody);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div className={classes.addPostBlock}>\r\n        <PostsForm addPost={addNewPost} />\r\n      </div>\r\n      <div className={classes.posts}>\r\n        {postElements}\r\n\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n})\r\n\r\nconst PostsForm = (props) => {\r\n  return (\r\n      <Formik\r\n      initialValues={{ postBody: ''}}\r\n     \r\n      onSubmit={(values, { setSubmitting }) => {\r\n          props.addPost(values.postBody);\r\n          setSubmitting(false);\r\n       \r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n            <div>\r\n          <Field type=\"text\" name=\"postBody\"  />\r\n          </div>\r\n          \r\n          <div>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Add Post\r\n          </button>\r\n          </div>\r\n\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postData: state.profilePage.postData,    \r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (postBody) => {\r\n      dispatch(addPostActionCreator(postBody));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport classes from './ProfileStatus.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  \r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => setEditMode(true);\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChanged = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n    return (\r\n      <div>\r\n\r\n            {!editMode &&\r\n              <div>\r\n                <span onDoubleClick={activateEditMode} >{status || 'Add status'}</span>\r\n              </div>\r\n            }\r\n\r\n            {editMode &&\r\n              <div>\r\n                <input onChange={onStatusChanged} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n      </div>\r\n    );\r\n\r\n  \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport classes from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/149071.png'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*<div className={classes.wall}>\r\n        <img src='https://www.industrialempathy.com/img/remote/ZiClJf-1920w.jpg' />\r\n  </div>*/}\r\n      <div className={classes.descriptionBlock}>\r\n        <span>\r\n          <img src={props.profile.photos.small !=null ? props.profile.photos.small : userPhoto} />\r\n        </span>\r\n        <span>\r\n          <div className={classes.userName}>\r\n            {props.profile.fullName}\r\n          </div>\r\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n          \r\n        </span>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n    return (\r\n      <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getUserStatus, updateStatus} from '../../Redux/profileReducer';\r\nimport Profile from './Profile';\r\nimport { withRouter } from 'react-router';\r\nimport { AuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n      let userId = this.props.match.params.userId;\r\n\r\n      if (!userId) {\r\n        userId = this.props.id;\r\n      }\r\n\r\n      this.props.getProfile(userId);\r\n      this.props.getUserStatus(userId);\r\n      \r\n  }\r\n\r\n  render() {\r\n\r\n      return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} \r\n        updateStatus={this.props.updateStatus} />\r\n        \r\n      )\r\n\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    id: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nlet Container = compose(\r\n  connect(mapStateToProps, {getProfile, getUserStatus, updateStatus}),\r\n  withRouter,\r\n  AuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\nexport default Container;\r\n\r\n\r\n","import { authMeAPI } from \"../Api/api\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.userData,\r\n\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    userData: { userId, email, login, isAuth }\r\n  };\r\n}\r\n\r\nexport const getAuthMeData = () => {\r\n  return async (dispatch) => {\r\n\r\n    let data = await authMeAPI.getAuthMeData();\r\n\r\n    if (data.resultCode === 0) {\r\n      let { id, email, login } = data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, setStatus) => {\r\n  return async (dispatch) => {\r\n\r\n    let data = await authMeAPI.login(email, password, rememberMe);\r\n\r\n    if (data.resultCode === 0) {\r\n      dispatch(getAuthMeData());\r\n    } else {\r\n      setStatus(data.messages);\r\n    }\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n\r\n    let data = await authMeAPI.logout();\r\n    if (data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default authReducer;","import { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\nimport { Layout, Row, Col, Avatar, Button } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Header} = Layout;\r\n\r\nconst AppHeader = (props) => {\r\n    return (\r\n        <Header className=\"header\">\r\n      <Row>\r\n        <Col span={20}>\r\n          <div className=\"logo\" />\r\n        </Col>\r\n          \r\n        <Col span={4}>\r\n        \r\n        {props.isAuth ? \r\n                \r\n                <div>\r\n                    <Avatar style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} /> \r\n                    {props.login}  \r\n                    <Button onClick={props.logout} >Logout</Button>\r\n                </div>\r\n                :<NavLink to='/signin'>Sign in</NavLink>}\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n\r\n\r\n\r\n     //   <header className = {classes.header}>\r\n      //      <img src='https://cdn.logo.com/hotlink-ok/logo-social.png' />\r\n\r\n      //      <div className = {classes.loginBlock}>\r\n       //         {props.isAuth ? \r\n        //        <div>{props.login} - <button onClick={props.logout} >Logout</button></div>\r\n        //        :<NavLink to='/signin'>Sign in</NavLink>}\r\n                    \r\n         //   </div>\r\n\r\n            \r\n      //  </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {logout } from '../../Redux/authReducer';\r\nimport AppHeader from './Header';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n\r\n      return (\r\n        <AppHeader {...this.props} />\r\n        \r\n      )\r\n\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\r\n\r\n\r\n","import { Formik, Form, useField } from 'formik';\r\n\r\n\r\nexport const MyTextInput = ({ label, ...props }) => {\r\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n    // which we can spread on <input>. We can use field meta to show an error\r\n    // message if the field is invalid and it has been touched (i.e. visited)\r\n    const [field, meta] = useField(props);\r\n    return (\r\n      <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <input className=\"text-input\" {...field} {...props} />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  export const MyCheckbox = ({ children, ...props }) => {\r\n    // React treats radios and checkbox inputs differently other input types, select, and textarea.\r\n    // Formik does this too! When you specify `type` to useField(), it will\r\n    // return the correct bag of props for you -- a `checked` prop will be included\r\n    // in `field` alongside `name`, `value`, `onChange`, and `onBlur`\r\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n    return (\r\n      <div>\r\n        <label className=\"checkbox-input\">\r\n          <input type=\"checkbox\" {...field} {...props} />\r\n          {children}\r\n        </label>\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n  ","import classes from './Signin.module.css';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { login } from '../../Redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router\";\r\nimport { MyCheckbox, MyTextInput } from '../Common/Helpers/form_helper';\r\n\r\nconst LoginValidation = Yup.object().shape({\r\n  email: Yup\r\n    .string()\r\n    .email()\r\n    .required(),\r\n  password: Yup\r\n    .string()\r\n    .min(8)\r\n    .max(16)\r\n    // .matches(/^.*((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n    // \"Password must contain at least one uppercase, one number and one special case character\")\r\n    .required(),\r\n})\r\n\r\nconst SigninForm = (props) => {\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{ email: '', password: '', rememberMe: false }}\r\n      validationSchema={LoginValidation}\r\n      onSubmit={(values, { setSubmitting, setStatus }) => (\r\n        props.login(values.email, values.password, values.rememberMe, setStatus),\r\n        setSubmitting = false\r\n      )}\r\n    >\r\n      {({ isSubmitting, status }) => (\r\n        <Form>\r\n          <MyTextInput\r\n             name=\"email\"\r\n             type=\"email\"\r\n             placeholder=\"email\"\r\n           />\r\n           \r\n           <MyTextInput\r\n             name=\"password\"\r\n             type=\"password\"\r\n             placeholder=\"password\"\r\n           />\r\n          \r\n          <MyCheckbox name=\"rememberMe\">\r\n            Remember me\r\n          </MyCheckbox>\r\n          \r\n          <div>{status}</div>\r\n          <div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nconst Signin = ({ isAuth, login }) => {\r\n  if (isAuth) {\r\n    return <Redirect to='/profile' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign In</h1>\r\n      <SigninForm login={login} />\r\n    </div>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Signin);","import { authMeAPI } from \"../Api/api\";\r\nimport { getAuthMeData } from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\n\r\n\r\nlet initialState = {\r\n  isInitialized : false,\r\n  \r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  \r\n\r\n\r\n    switch(action.type) {\r\n        case SET_INITIALIZED: \r\n            return {\r\n              ...state,\r\n              isInitialized: true,\r\n              \r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => {\r\n    return {\r\n      type: SET_INITIALIZED\r\n      \r\n    };\r\n  }\r\n\r\n  export const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthMeData());\r\n        promise.then(() => {\r\n          dispatch(setInitialized());\r\n        })\r\n        \r\n      }\r\n }\r\n\r\n \r\n\r\n\r\n\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport messagesReducer from './messagesReducer';\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n\r\n\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport Preloader from '../Components/Common/Preloader/Preloader';\r\n\r\n\r\nexport const withReactSuspense = (Component) => {\r\n  let ReactSuspenseComponent = (props) => {\r\n\r\n    return <Suspense fallback={<div><Preloader /></div>}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n\r\n  }\r\n\r\n  return ReactSuspenseComponent;\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { Route, withRouter } from 'react-router';\nimport Music from './Components/Music/Music';\nimport Settings from './Components/Settings/Settings';\nimport News from './Components/News/News';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Signin from './Components/Signin/Signin';\nimport { Component } from 'react';\nimport { initializeApp } from './Redux/appReducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './Components/Common/Preloader/Preloader';\nimport store from './Redux/reduxStore';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Layout, Menu, Breadcrumb} from 'antd';\nimport { UserOutlined, MessageOutlined, SmileOutlined } from '@ant-design/icons';\nimport { withReactSuspense } from './HOC/withReactSuspense';\n\nconst MessagesContainer = React.lazy(() => import('./Components/Messages/MessagesContainer'));\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\n\n\nconst { Header, Content, Sider } = Layout;\n\n\nclass App extends Component {\n  componentDidMount() {\n\n    this.props.initializeApp();\n\n  }\n\n  render() {\n    if (!this.props.isInitialized) {\n      return <Preloader />\n    }\n    return (\n      <Layout>\n    <HeaderContainer />\n    <Layout>\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          selectedKeys={[this.props.location.pathname]}\n          defaultOpenKeys={['/profile']}\n          defaultSelectedKeys={['/profile']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          \n            <Menu.Item key=\"/profile\" icon={<UserOutlined />}><Link to = '/profile'>Profile</Link></Menu.Item>\n            <Menu.Item key=\"/messages\" icon={<MessageOutlined />}> <Link to = '/messages'>Messages</Link></Menu.Item>\n            <Menu.Item key=\"/users\" icon={<SmileOutlined />}> <Link to = '/users'>Users</Link></Menu.Item>\n            \n        </Menu>\n      </Sider>\n      <Layout style={{ padding: '0 24px 24px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            padding: 24,\n            margin: 0,\n            minHeight: 280,\n          }}\n        >\n         <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n          <Route path='/messages' render={withReactSuspense(MessagesContainer)} />\n          <Route path='/users' render={withReactSuspense(UsersContainer)} />\n          <Route path='/news' render={() => <News />} />\n          <Route path='/music' render={() => <Music />} />\n          <Route path='/settings' render={() => <Settings />} />\n          <Route path='/signin' render={() => <Signin />} />\n        </Content>\n      </Layout>\n    </Layout>\n  </Layout>\n \n    //  <div className='container'>\n    //    <HeaderContainer />\n    //    <Navbar />\n    //    <div className='container-content'>\n    //      <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n    //      <Route path='/messages' render={() => <MessagesContainer />} />\n    //      <Route path='/users' render={() => <UsersContainer />} />\n    //      <Route path='/news' render={() => <News />} />\n     //     <Route path='/music' render={() => <Music />} />\n     //     <Route path='/settings' render={() => <Settings />} />\n     //     <Route path='/signin' render={() => <Signin />} />\n\n     //   </div>\n    //  </div>\n    );\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    isInitialized: state.app.isInitialized\n\n  }\n}\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nconst MainApp = (props) => {\n  return <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>\n}\n\nexport default MainApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/reduxStore';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n  ReactDOM.render(   \n      <MainApp />,\n    document.getElementById('root')\n  );\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/Spinner.af27eb41.svg\";","import spinner from '../../../assets/images/Spinner.svg'\r\n\r\n\r\nconst Preloader = (props) => {\r\n    return <img src={spinner} />\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}