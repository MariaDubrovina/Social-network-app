{"version":3,"sources":["Components/Users/Users.module.css","Components/Common/Pagination/Pagination.module.css","Components/Users/User/User.module.css","Components/Common/Pagination/Pagination.jsx","Components/Users/User/User.jsx","Components/Users/Users.jsx","Redux/users_selectors.js","Components/Users/UsersContainer.jsx"],"names":["module","exports","AppPagination","props","total","totalUsersCount","showTotal","showQuickJumper","showSizeChanger","current","currentPage","onChange","onPageChanged","User","to","user","id","src","photos","small","userPhoto","className","classes","avatar","followed","disabled","isFollowButtonClicled","some","onClick","unfollow","follow","name","status","key","Users","pageSize","users","map","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","isLoading","getIsFollowButtonClicled","UsersContainer","pageNumber","setCurrentPage","requestUsers","this","Preloader","React","Component","Container","compose","connect","disableButton","AuthRedirect"],"mappings":"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","file":"static/js/5.69cf62f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__ZmSMS\",\"selectedPage\":\"Users_selectedPage__2ym-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Pagination_selectedPage__1fedr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__2CKah\"};","import classes from './Pagination.module.css';\r\nimport React from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\nconst AppPagination = (props) => {\r\n\r\n    function showTotal(total) {\r\n        return `Total ${total} items`;\r\n      }\r\n\r\n    return <Pagination\r\n      //size=\"small\"\r\n      total={props.totalUsersCount}\r\n      showTotal={showTotal}\r\n      showQuickJumper\r\n      showSizeChanger={false}\r\n      current={props.currentPage}\r\n      onChange={props.onPageChanged}\r\n    />\r\n\r\n   // let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n   // let pages = [];\r\n  //  for (let i = 1; i <= pageCount; i++) {\r\n  //      pages.push(i);\r\n  //  }\r\n\r\n  //  return <div>\r\n   //         {pages.map((page) => {\r\n    //            return <span onClick={(e) => { props.onPageChanged(page) }} className={props.currentPage === page && classes.selectedPage}>{page}</span>\r\n   //         })}\r\n   //     </div>\r\n    \r\n}\r\n\r\n\r\n\r\nexport default AppPagination;","import classes from './User.module.css';\r\nimport userPhoto from '../../../assets/images/149071.png'\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    return <div key={props.key} >\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + props.user.id}>\r\n                            <img src={props.user.photos.small !=null ? props.user.photos.small : userPhoto} className={classes.avatar}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {props.user.followed ? <button disabled={props.isFollowButtonClicled.some(id => id === props.user.id)} onClick={() => {\r\n                                            \r\n                                                     props.unfollow(props.user.id);\r\n                                                \r\n                                                \r\n                                        }} >Unfollow</button> : \r\n\r\n                                        <button disabled={props.isFollowButtonClicled.some(id => id === props.user.id)} onClick={() => {\r\n                                           \r\n                                                     props.follow(props.user.id);\r\n                                               \r\n                                             \r\n                                        }}>Follow</button>} \r\n                        \r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>\r\n                            {props.user.name}\r\n                        </div>\r\n                        <div>\r\n                            {props.user.status}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>\r\n                            {'user.location.country'}\r\n                        </div>\r\n                        <div>\r\n                            {'user.location.city'}\r\n                        </div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n           \r\n    \r\n    }\r\n\r\n\r\n\r\nexport default User;","import classes from './Users.module.css';\r\nimport userPhoto from '../../assets/images/149071.png'\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AppPagination from '../Common/Pagination/Pagination';\r\nimport User from './User/User';\r\n\r\n\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        \r\n        <AppPagination currentPage={props.currentPage} totalUsersCount={props.totalUsersCount}\r\n                    onPageChanged={props.onPageChanged} pageSize={props.pageSize} />\r\n    {\r\n        \r\n        props.users.map((user) => {\r\n            return (\r\n                <User user={user} key={user.id} isFollowButtonClicled={props.isFollowButtonClicled}\r\n                follow={props.follow} unfollow={props.unfollow} />\r\n            )\r\n        })\r\n  \r\n    \r\n    }\r\n     </div>\r\n}\r\n\r\n\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading;\r\n}\r\n\r\nexport const getIsFollowButtonClicled = (state) => {\r\n    return state.usersPage.isFollowButtonClicled;\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setCurrentPage, unfollow, disableButton, requestUsers } from '../../Redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { AuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getIsFollowButtonClicled, getIsLoading, getPageSize, getTotalUsersCount, getUsers } from '../../Redux/users_selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n      this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n      \r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n      this.props.setCurrentPage(pageNumber);\r\n      this.props.requestUsers(pageNumber, this.props.pageSize)\r\n  \r\n  }\r\n\r\n  render() {\r\n\r\n      return <>\r\n        {this.props.isLoading ? <Preloader /> : \r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        isFollowButtonClicled={this.props.isFollowButtonClicled}\r\n                         />\r\n        }\r\n      </>\r\n\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isLoading: getIsLoading(state),\r\n    isFollowButtonClicled: getIsFollowButtonClicled(state),\r\n    \r\n  }\r\n}\r\n\r\n\r\nlet Container = compose(\r\n  connect(mapStateToProps, {follow, unfollow, setCurrentPage, disableButton, requestUsers}),\r\n  AuthRedirect\r\n)(UsersContainer);\r\n\r\n\r\n\r\nexport default Container;\r\n\r\n"],"sourceRoot":""}