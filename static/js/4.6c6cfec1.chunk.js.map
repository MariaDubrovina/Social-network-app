{"version":3,"sources":["Components/Messages/ChatItem/ChatItem.module.css","Components/Messages/Messages.module.css","Components/Messages/ChatItem/ChatItem.jsx","Components/Messages/MessageItem/MessageItem.jsx","Components/Messages/Messages.jsx","Components/Messages/MessagesContainer.jsx"],"names":["module","exports","ChatItem","props","className","classes","item","to","id","activeClassName","active","name","MessageItem","message","MessagesForm","initialValues","messageBody","validationSchema","LoginValidation","onSubmit","values","setSubmitting","sendMessage","isSubmitting","type","placeholder","component","disabled","Yup","shape","required","Messages","chatElements","chatData","map","chat","messageElements","messageData","msg","chats","chatsItems","messages","MessagesContainer","compose","connect","state","messagesPage","dispatch","sendMessageCreator","AuthRedirect"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,0CCAzDD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,6BAA6B,SAAW,6B,2FCYxFC,EAVE,SAACC,GACd,OACI,qBAAKC,UAAWC,IAAQC,KAAxB,SACI,cAAC,IAAD,CAASC,GAAI,aAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAQK,OAA9D,SAAuEP,EAAMQ,U,kBCO1EC,EATK,SAACT,GACjB,OACI,qBAAKC,UAAWC,IAAQQ,QAAxB,SAAkCV,EAAMU,W,mCC0C1CC,EAAe,SAACX,GAClB,OACI,cAAC,IAAD,CACAY,cAAe,CAAEC,YAAa,IAC9BC,iBAAkBC,EAClBC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACjBlB,EAAMmB,YAAYF,EAAOJ,aACzBK,GAAc,IALlB,SASC,gBAAGE,EAAH,EAAGA,aAAH,OACC,eAAC,IAAD,WACI,8BACF,cAAC,IAAD,CAAOC,KAAK,OAAOb,KAAK,cAAcc,YAAY,yBAElD,cAAC,IAAD,CAAcd,KAAK,cAAce,UAAU,QAC3C,8BACA,wBAAQF,KAAK,SAASG,SAAUJ,EAAhC,2BAWNL,EAAkBU,MAAaC,MAAM,CACvCb,YAAaY,MAEVE,SAAS,4BAKDC,EA5EE,SAAC5B,GAGd,IAAI6B,EAAe7B,EAAM8B,SAASC,KAAI,SAACC,GACnC,OACI,cAAC,EAAD,CAAUxB,KAAMwB,EAAKxB,KAAoBH,GAAI2B,EAAK3B,IAAlB2B,EAAK3B,OAMzC4B,EAAkBjC,EAAMkC,YAAYH,KAAI,SAACI,GACzC,OACI,cAAC,EAAD,CAAazB,QAASyB,EAAIzB,SAAcyB,EAAI9B,OAWpD,OACI,sBAAKJ,UAAWC,IAAQkC,MAAxB,UACI,qBAAKnC,UAAWC,IAAQmC,WAAxB,SACKR,IAIL,sBAAK5B,UAAWC,IAAQoC,SAAxB,UACI,8BAAML,IACN,cAAC,EAAD,CAAcd,YAfN,SAACN,GACjBb,EAAMmB,YAAYN,a,yBCJpB0B,EAAoBC,YACxBC,aAhBoB,SAACC,GACrB,MAAO,CACLZ,SAAUY,EAAMC,aAAab,SAC7BI,YAAaQ,EAAMC,aAAaT,gBAIX,SAACU,GACxB,MAAO,CACLzB,YAAa,SAACN,GACZ+B,EAASC,YAAmBhC,SAOhCiC,IAFwBN,CAGxBZ,GAMaW","file":"static/js/4.6c6cfec1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ChatItem_item__LK9gh\",\"active\":\"ChatItem_active__3JQ7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chats\":\"Messages_chats__3Mb1o\",\"chatsItems\":\"Messages_chatsItems__1eHVq\",\"messages\":\"Messages_messages__2NtE0\"};","import { NavLink } from 'react-router-dom';\r\nimport classes from './ChatItem.module.css';\r\n\r\nconst ChatItem = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <NavLink to={'/messages/'+ props.id} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ChatItem;","\r\nimport classes from './MessageItem.module.css';\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport ChatItem from './ChatItem/ChatItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport classes from './Messages.module.css';\r\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n\r\n    let chatElements = props.chatData.map((chat) => {\r\n        return (\r\n            <ChatItem name={chat.name} key={chat.id} id={chat.id} />\r\n        );\r\n    }\r\n    );\r\n\r\n\r\n    let messageElements = props.messageData.map((msg) => {\r\n        return (\r\n            <MessageItem message={msg.message} key={msg.id} />\r\n        );\r\n    }\r\n    );\r\n    \r\n    let addNewMessage = (messageBody) => {\r\n        props.sendMessage(messageBody);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.chats}>\r\n            <div className={classes.chatsItems}>\r\n                {chatElements}\r\n\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{messageElements}</div>\r\n                <MessagesForm sendMessage={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MessagesForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={{ messageBody: ''}}\r\n        validationSchema={LoginValidation}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n            props.sendMessage(values.messageBody);\r\n            setSubmitting(false);\r\n         \r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n              <div>\r\n            <Field type=\"text\" name=\"messageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <ErrorMessage name=\"messageBody\" component=\"div\" />\r\n            <div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Send\r\n            </button>\r\n            </div>\r\n\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n}\r\n\r\nconst LoginValidation = Yup.object().shape({\r\n    messageBody: Yup\r\n      .string()\r\n      .required(\"Please write a message\"),\r\n    \r\n  })\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { sendMessageCreator } from '../../Redux/messagesReducer';\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux';\r\nimport { AuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    chatData: state.messagesPage.chatData,\r\n    messageData: state.messagesPage.messageData,   \r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (messageBody) => {\r\n      dispatch(sendMessageCreator(messageBody));\r\n    }\r\n  }\r\n}\r\n\r\nconst MessagesContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  AuthRedirect\r\n)(Messages);\r\n\r\n//let AuthRedirectContainer = AuthRedirect(Messages);\r\n//const MessagesContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectContainer);\r\n\r\n\r\nexport default MessagesContainer;"],"sourceRoot":""}